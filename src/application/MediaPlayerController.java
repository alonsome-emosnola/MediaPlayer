package application;

import javafx.stage.FileChooser;

import java.io.File;
import java.time.Duration;

import javafx.beans.InvalidationListener;
import javafx.beans.Observable;
import javafx.beans.binding.Bindings;
import javafx.beans.property.DoubleProperty;
import javafx.beans.value.ChangeListener;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.Slider;
import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;
import javafx.scene.media.MediaView;

public class MediaPlayerController {
	private MediaPlayer mediaPlayer;
	@FXML
	private MediaView mediaView;
	private String filepath;
	private Slider slider;
	private Slider seekSlider;
	// Event Listener on Button.onAction
	public void handleOpenButton(ActionEvent event) {
		// TODO Autogenerated
		FileChooser fileChooser = new FileChooser();
		FileChooser.ExtensionFilter filter = new FileChooser.ExtensionFilter("Select a video (.mp4)", "*.mp4");
		fileChooser.getExtensionFilters().add(filter);
		
		File file = fileChooser.showOpenDialog(null);
		filepath = file.toURI().toString();
		
		if (filepath != null) {
			Media media = new Media(filepath);
			mediaPlayer = new MediaPlayer(media);
			mediaView.setMediaPlayer(mediaPlayer);
				DoubleProperty width = mediaView.fitWidthProperty();
				DoubleProperty height = mediaView.fitHeightProperty();
				
				width.bind(Bindings.selectDouble(mediaView.sceneProperty(), "width"));
				height.bind(Bindings.selectDouble(mediaView.sceneProperty(), "height"));
				
				slider.setValue(mediaPlayer.getVolume() * 100);
				slider.valueProperty().addListener(new InvalidationListener() {
					@Override
					public void invalidated(Observable observable) {
						mediaPlayer.setVolume(slider.getValue()/100);
					}
				});
				
				// TODO Fix the error under this
				mediaPlayer.currentTimeProperty().addListener((InvalidationListener) new javafx.beans.value.ChangeListener<Duration>() {
					@Override
					public void changed(javafx.beans.value.ObservableValue<? extends Duration> arg0, Duration arg1, Duration arg2) {
						seekSlider.setValue(arg2.toSeconds());
					};
				});
				
			mediaPlayer.play();
		}
		
	}
	
	@FXML
	private void pauseVideo(ActionEvent event) {
		mediaPlayer.pause();
	}
	@FXML
	private void playVideo(ActionEvent event) {
		mediaPlayer.play();
		mediaPlayer.setRate(1);
	}
	@FXML
	private void stopVideo(ActionEvent event) {
		mediaPlayer.stop();
	}
	@FXML
	private void fastVideo(ActionEvent event) {
		mediaPlayer.setRate(1.5);
	}
	@FXML
	private void fasterVideo(ActionEvent event) {
		mediaPlayer.setRate(2);
	}
	@FXML
	private void slowVideo(ActionEvent event) {
		mediaPlayer.setRate(.75);
	}
	@FXML
	private void slowerVideo(ActionEvent event) {
		mediaPlayer.setRate(.5);
	}
	@FXML
	private void exitVideo(ActionEvent event) {
		System.exit(0);
	}
}
